// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelDesk.Data;

#nullable disable

namespace TravelDesk.Migrations
{
    [DbContext(typeof(TravelDeskContext))]
    [Migration("20250723021046_AddSeedUsers")]
    partial class AddSeedUsers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TravelDesk.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2025, 7, 23, 7, 40, 44, 508, DateTimeKind.Local).AddTicks(6864),
                            DepartmentName = "IT",
                            IsActive = true
                        },
                        new
                        {
                            DepartmentId = 2,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2025, 7, 23, 7, 40, 44, 508, DateTimeKind.Local).AddTicks(6870),
                            DepartmentName = "HR",
                            IsActive = true
                        },
                        new
                        {
                            DepartmentId = 3,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2025, 7, 23, 7, 40, 44, 508, DateTimeKind.Local).AddTicks(6875),
                            DepartmentName = "Admin",
                            IsActive = true
                        },
                        new
                        {
                            DepartmentId = 4,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2025, 7, 23, 7, 40, 44, 508, DateTimeKind.Local).AddTicks(6880),
                            DepartmentName = "Travel",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("TravelDesk.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2025, 7, 23, 7, 40, 44, 508, DateTimeKind.Local).AddTicks(6970),
                            IsActive = true,
                            ProjectName = "Project Alpha"
                        },
                        new
                        {
                            ProjectId = 2,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2025, 7, 23, 7, 40, 44, 508, DateTimeKind.Local).AddTicks(6975),
                            IsActive = true,
                            ProjectName = "Project Beta"
                        },
                        new
                        {
                            ProjectId = 3,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2025, 7, 23, 7, 40, 44, 508, DateTimeKind.Local).AddTicks(6979),
                            IsActive = true,
                            ProjectName = "Project Gamma"
                        });
                });

            modelBuilder.Entity("TravelDesk.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2025, 7, 23, 7, 40, 44, 508, DateTimeKind.Local).AddTicks(3463),
                            IsActive = true,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2025, 7, 23, 7, 40, 44, 508, DateTimeKind.Local).AddTicks(3478),
                            IsActive = true,
                            RoleName = "TravelAdmin"
                        },
                        new
                        {
                            RoleId = 3,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2025, 7, 23, 7, 40, 44, 508, DateTimeKind.Local).AddTicks(3482),
                            IsActive = true,
                            RoleName = "Manager"
                        },
                        new
                        {
                            RoleId = 4,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2025, 7, 23, 7, 40, 44, 508, DateTimeKind.Local).AddTicks(3486),
                            IsActive = true,
                            RoleName = "Employee"
                        });
                });

            modelBuilder.Entity("TravelDesk.Models.TravelRequest", b =>
                {
                    b.Property<int>("TravelRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TravelRequestId"));

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FromLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("ReasonForTravel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TicketUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ToLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TravelRequestId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("TravelRequests");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("MobileNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("ManagerId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Address = "123 Admin Street",
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2025, 7, 23, 7, 40, 44, 508, DateTimeKind.Local).AddTicks(7107),
                            DepartmentId = 3,
                            Email = "admin@traveldesk.com",
                            FirstName = "Admin",
                            IsActive = true,
                            LastName = "User",
                            MobileNum = "1234567890",
                            Password = "admin123",
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            Address = "456 Travel Street",
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2025, 7, 23, 7, 40, 44, 508, DateTimeKind.Local).AddTicks(7488),
                            DepartmentId = 4,
                            Email = "traveladmin@traveldesk.com",
                            FirstName = "Travel",
                            IsActive = true,
                            LastName = "Admin",
                            ManagerId = 1,
                            MobileNum = "2345678901",
                            Password = "travel123",
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            Address = "789 Manager Street",
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2025, 7, 23, 7, 40, 44, 508, DateTimeKind.Local).AddTicks(7495),
                            DepartmentId = 1,
                            Email = "manager@traveldesk.com",
                            FirstName = "Manager",
                            IsActive = true,
                            LastName = "User",
                            ManagerId = 1,
                            MobileNum = "3456789012",
                            Password = "manager123",
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 4,
                            Address = "321 Employee Street",
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2025, 7, 23, 7, 40, 44, 508, DateTimeKind.Local).AddTicks(7502),
                            DepartmentId = 1,
                            Email = "employee@traveldesk.com",
                            FirstName = "Employee",
                            IsActive = true,
                            LastName = "User",
                            ManagerId = 3,
                            MobileNum = "4567890123",
                            Password = "employee123",
                            RoleId = 4
                        });
                });

            modelBuilder.Entity("TravelDesk.Models.TravelRequest", b =>
                {
                    b.HasOne("TravelDesk.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelDesk.Models.Project", "Project")
                        .WithMany("TravelRequests")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("User", "UserName")
                        .WithMany("TravelRequests")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Project");

                    b.Navigation("UserName");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.HasOne("TravelDesk.Models.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("User", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TravelDesk.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Manager");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TravelDesk.Models.Department", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("TravelDesk.Models.Project", b =>
                {
                    b.Navigation("TravelRequests");
                });

            modelBuilder.Entity("TravelDesk.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Navigation("TravelRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
